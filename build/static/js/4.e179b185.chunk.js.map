{"version":3,"sources":["game/Scripts/Move.ts","game/Scripts/Object/Dancer.ts","game/Scripts/Object/Button.ts","game/Scripts/Object/CountDown.ts","game/Scripts/Object/ScorePopUp.ts","game/Scripts/Helper/AnimationHelper.ts","game/Scripts/Manager/MoveManager.ts","game/Scripts/Object/GameScore.ts","game/Scripts/Object/MusicButton.ts","game/Scripts/Object/Timer.ts","game/Scripts/Object/RoundSummary.ts","game/Scripts/Object/GameOver.ts","game/Scripts/Helper/TextHelper.ts","game/Scripts/Scene/GameScene.ts","game/Scripts/Scene/PreloadScene.ts","game/Scripts/app.ts","game/index.tsx"],"names":["Move","Dancer","scene","x","y","setScale","cameras","main","width","anims","create","key","frames","generateFrameNumbers","start","end","frameRate","yoyo","repeat","add","existing","load","dance","kIdle","move","chainToIdle","this","play","chain","Phaser","Sprite","Button","height","m_move","m_scene","setOrigin","setInteractive","on","isPressed","processMove","validateMove","Image","CountDown","countDownText","m_countDownText","m_text","m_whistleSound","index","length","text","fontSize","color","fontFamily","sound","setVisible","callbackFunction","delay","i","time","addEvent","callback","setText","ScorePopUp","duration","kUp","val","Math","pow","loop","setAlpha","alpha","destroy","Text","AnimationHelper","object","scale","repeatTime","tweens","targets","ease","degree","angle","onComplete","Swing","target","Resize","easeDuration","ChangeAlpha","m_instance","MoveObject","Slot","graphics","lineStyle","fillStyle","visible","clear","circle","Circle","displayWidth","strokeCircleShape","MoveManager","m_memorizeTime","m_delayBetweenMove","m_isValidating","m_currentIndex","m_currMoveCount","m_moves","m_slots","m_correctSound","m_wrongSound","m_position","m_marginBottom","Point","count","createMoveSlots","clearSlots","slot","max","currMoveCount","push","show","showMark","clearMoves","round","random","kRight","fillSlot","Instance","isValid","getMove","displayMove","addScore","image","wrongMove","hideMoves","roundComplete","Pulse","moveObject","startInputPhase","destroyDot","GameScore","m_score","toString","score","MusicButton","m_isOn","rect","rectangle","setSound","mute","Timer","m_duration","m_currentTime","m_timer","m_milliseconds","m_seconds","m_hasStarted","substr","setMilliseconds","undefined","delayedCall","pause","paused","getProgress","setSeconds","seconds","RoundSummary","point","children","fillRoundedRect","panelTitle","shadow","setStroke","titleText","youGet","coin","points","pointText","m_roundText","m_pointText","m_shadow","setDepth","bonus","Container","GameOver","gameOverContainer","replayButton","gameOverText","reset","GameObjects","isVisible","TextHelper","size","hasShadow","setShadowStroke","setShadow","k_moveCounts","GameScene","m_correctScore","m_wrongPenalty","m_firstTryBonus","m_moveCounts","m_isFirstTry","m_showInstruction","m_moveManager","m_dancer","m_currentRound","m_upButton","m_rightButton","m_countDown","m_scoreUI","m_roundSummary","m_tint","m_bgm","m_winSound","m_gameOverUI","m_musicButton","setMoveCount","startCountDownPhase","startMemorizePhase","showText","showMoveSlots","displayMoves","bg","displayHeight","hide","volume","rate","detune","seek","loadData","initGame","EaseInAndFade","tick","enableButton","kWin","Score","setScore","generateMoves","startCountDown","playTimer","gameOver","enable","disableInteractive","isValidating","lose","PreloadScene","useProgress","data","path","process","spritesheet","frameWidth","frameHeight","audio","updateBar","complete","font","fill","percentage","newPercentage","limit","setProgress","floor","defaultConfig","title","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","window","devicePixelRatio","innerWidth","innerHeight","physics","default","arcade","debug","backgroundColor","PhaserGame","config","Game","props","isReadyToLoad","hasFontLoaded","prevProps","id","React","PureComponent"],"mappings":"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","file":"static/js/4.e179b185.chunk.js","sourcesContent":["\n\nexport enum Move\n{   \n    kIdle ='idle',\n    kUp = 'up',\n    kRight = 'right',\n    kWin =\"win\",\n    kLose =\"lose\",\n}","import * as Phaser from \"phaser\";\nimport { Move } from \"../Move\";\n\nexport default class Dancer extends Phaser.GameObjects.Sprite {\n\n  constructor(scene: Phaser.Scene, x: number, y: number) {\n    super(scene, x, y, \"dancer-idle\", 0);\n\n    this.setScale(0.65 * scene.cameras.main.width/720);\n    scene.anims.create({\n      key: \"idle\",\n      frames: scene.anims.generateFrameNumbers(\"dancer-idle\", {\n        start: 0,\n        end: 2\n      }),\n      frameRate: 6,\n      yoyo: false,\n      repeat: -1\n    });\n\n    scene.anims.create({\n      key: \"up\",\n      frames: scene.anims.generateFrameNumbers(\"dancer-up\", {\n        start: 0,\n        end: 7\n      }),\n      frameRate: 12,\n      yoyo: false,\n      repeat: 0,\n    });\n\n     scene.anims.create({\n      key: \"right\",\n      frames: scene.anims.generateFrameNumbers(\"dancer-right\", {\n        start: 0,\n        end: 7\n      }),\n      frameRate: 12,\n      yoyo: false,\n      repeat: 0,\n    });\n\n\n    scene.anims.create({\n        key: \"lose\",\n        frames: scene.anims.generateFrameNumbers(\"dancer-lose\", {\n          start: 0,\n          end: 7\n        }),\n        frameRate: 10,\n        yoyo: false,\n        repeat: 0,\n      });\n\n      \n    scene.anims.create({\n        key: \"win\",\n        frames: scene.anims.generateFrameNumbers(\"dancer-win\", {\n          start: 0,\n          end: 7\n        }),\n        frameRate: 12,\n        yoyo: false,\n        repeat: 1,\n      });\n\n         \n    scene.anims.create({\n        key: \"sulk\",\n        frames: scene.anims.generateFrameNumbers(\"dancer-lose\", {\n          start: 6,\n          end: 1\n        }),\n        frameRate: 8,\n        yoyo: false,\n        repeat: -1,\n      });\n     \n\n    scene.add.existing(this);\n\n    this.anims.load(\"idle\");\n    this.anims.load(\"up\");\n    this.anims.load(\"right\");\n    this.anims.load(\"lose\");\n    this.anims.load(\"win\");\n    this.anims.load(\"sulk\");\n\n    this.dance(Move.kIdle);\n\n\n  }\n\n  public dance(move: Move, chainToIdle:boolean = true): void {\n   \n    this.anims.play(move);\n\n    if(chainToIdle)\n        this.anims.chain('idle');\n  }\n\n  public lose()\n  {\n    this.anims.play(\"lose\");\n\n    this.anims.chain(\"sulk\");\n  }\n}\n","import * as Phaser from 'phaser';\nimport {Move} from \"../Move\"\nimport GameScene from '../Scene/GameScene';\n\n\n\nexport default class Button extends Phaser.GameObjects.Image\n{   \n    private m_move:Move;\n    private m_scene:GameScene;\n    \n    constructor(scene:GameScene, x:number, y:number, move:Move)\n    {   \n        super(scene, x , y - 0.125 * scene.cameras.main.height * scene.cameras.main.width/720, move , 0);\n\n        this.m_scene = scene;\n\n        this.m_move = move;\n\n        this.setOrigin(0.5, 0.70);\n\n        scene.add.existing(this);\n        \n        this.setScale(scene.cameras.main.width/720);\n\n        this.setInteractive();\n        this.on(\"pointerdown\", () => this.isPressed());\n        \n    }\n\n\n    isPressed()\n    {\n        this.m_scene.processMove(this.m_move);\n        this.m_scene.validateMove(this.m_move);\n    }\n  \n\n}","import * as Phaser from 'phaser';\n\nexport default class CountDown {\n  private m_countDownText: string[] = ['Ready', 'Set', 'Go'];\n  private m_text: Phaser.GameObjects.Text;\n  private m_scene: Phaser.Scene;\n  private m_whistleSound: Phaser.Sound.BaseSound;\n\n  constructor(\n    scene: Phaser.Scene,\n    x: number,\n    y: number,\n    countDownText: string[] = [],\n  ) {\n    this.m_scene = scene;\n\n    if (countDownText.length !== 0) {\n      this.m_countDownText = countDownText;\n    }\n\n    this.m_text = scene.add\n      .text(x, y, this.m_countDownText[0], { fontSize: 68 * scene.cameras.main.width/720, color: 'white', fontFamily: 'Exo',})\n      .setOrigin(0.5);\n    this.m_whistleSound = scene.sound.add('whistle');\n    this.m_text.setVisible(false);\n  }\n  private index = 0;\n  //** startCountDown require a function as paramater to call when the countdouwn is complete,\n  //** it also accepts delay between countdown in seconds\n  startCountDown(callbackFunction: () => void, delay: number = 1): void {\n      this.m_text.setVisible(true);\n    this.index = 0;\n    this.m_text.setVisible(true);\n    for (let i = 0; i < this.m_countDownText.length + 1; i++) {\n      this.m_scene.time.addEvent({\n        delay: delay * 1000 * i,\n        callback: () => {\n          if (this.index === this.m_countDownText.length) {\n            this.m_text.setVisible(false);\n            callbackFunction();\n            this.index = 0;\n          } else {\n            this.m_whistleSound.play();\n            this.m_text.setText(this.m_countDownText[i]);\n          }\n          this.index++;\n        },\n      });\n    }\n  }\n}\n","import * as Phaser from 'phaser';\nimport { Move } from '../Move';\n\nexport default class ScorePopUp extends Phaser.GameObjects.Text {\n  constructor(\n    scene: Phaser.Scene,\n    x: number,\n    y: number,\n    text: string,\n    move: Move,\n    duration: number,\n  ) {\n    let color;\n    if (move === Move.kUp) {\n      color = '#ffa500';\n    } else {\n      color = '#22A72A';\n    }\n\n    super(scene, x, y, text, { color: color, fontSize: '42px', fontFamily: \"Exo\"  });\n\n    this.scene.add.existing(this);\n    this.setOrigin(0.5);\n    this.setScale(scene.cameras.main.width/720);\n\n    let val = Math.pow(0.1, 0.02 / duration);\n\n    scene.time.addEvent({\n      delay: 20,\n      loop: true,\n      callback: () => {\n        this.y -= 3 * scene.cameras.main.width/720 ;\n        this.setAlpha(this.alpha * val);\n        if (this.alpha < 0.1) {\n          this.destroy();\n        }\n      },\n    });\n  }\n}\n","import * as Phaser from 'phaser';\n\nexport default class AnimationHelper {\n  private static m_instance: AnimationHelper;\n\n  public static get Instance() {\n    return this.m_instance || (this.m_instance = new this());\n  }\n\n  public Pulse(\n    scene: Phaser.Scene,\n    object: Phaser.GameObjects.GameObject,\n    duration: number,\n    scale: number,\n    repeatTime: number = 0,\n    delay: number = 0\n  ) {\n    scene.tweens.add({\n      targets: object,\n      scale: scale,\n      ease: 'Linear',\n      duration: duration * 1000,\n      yoyo: true,\n      repeat: repeatTime,\n      delay:delay * 1000,\n    });\n  }\n\n  public Resize(\n    scene: Phaser.Scene,\n    object: Phaser.GameObjects.GameObject,\n    duration: number,\n    scale: number,\n    delay:number = 0\n  ) {\n    scene.tweens.add({\n      targets: object,\n      scale: scale,\n      ease: 'Linear',\n      duration: duration * 1000,\n      yoyo: false,\n      repeat: 0,\n      delay:delay * 1000\n    });\n  }\n\n  public Swing(\n    scene: Phaser.Scene,\n    object: Phaser.GameObjects.GameObject,\n    duration: number,\n    degree: number,\n    repeatTime: number,\n  ) {\n    scene.tweens.add({\n      targets: object,\n      angle: degree,\n      ease: 'Linear',\n      duration: (duration / 2) * 1000,\n      yoyo: true,\n      repeat: 0,\n      onComplete: () => {\n        this.Swing(scene, object, duration, -degree, repeatTime);\n      },\n    });\n  }\n\n  public ChangeAlpha(\n    scene: Phaser.Scene,\n    object: Phaser.GameObjects.GameObject,\n    duration: number,\n    alpha: number,\n    yoyo: boolean = false,\n    delay: number = 0\n  ) {\n    scene.tweens.add({\n      delay: delay * 1000,\n      targets: object,\n      alpha: alpha,\n      ease: 'Linear',\n      duration: duration * 1000,\n      yoyo: yoyo,\n      repeat: 0\n    });\n  }\n\n  public MoveToTarget(\n    scene: Phaser.Scene,\n    object: Phaser.GameObjects.GameObject,\n    duration: number,\n    target: Phaser.Geom.Point,\n  ) {\n    scene.tweens.add({\n      targets: object,\n      x: target.x,\n      y: target.y,\n      ease: 'Linear',\n      duration: duration * 1000,\n      yoyo: false,\n      repeat: 0,\n    });\n  }\n\n  public EaseInAndFade(scene: Phaser.Scene, object: Phaser.GameObjects.GameObject, duration:number)\n  {  \n       this.Resize(scene, object, 0, 0.3 * scene.cameras.main.width/720);\n\n      let easeDuration = duration * 0.5;\n\n      if(easeDuration > 0.3) easeDuration = 0.5;\n \n      this.Resize(scene, object, easeDuration, 1.2 * scene.cameras.main.width/720);\n      this.ChangeAlpha(scene, object, duration - easeDuration, 0, false,  0.5);\n  }\n}\n\n","import * as Phaser from 'phaser';\nimport { Move } from '../Move';\nimport GameScene from '../Scene/GameScene';\nimport ScorePopUp from '../Object/ScorePopUp';\nimport AnimationHelper from '../Helper/AnimationHelper';\n\nclass MoveObject extends Phaser.GameObjects.Image {\n  private move: Move;\n\n  public getMove(): Move {\n    return this.move;\n  }\n\n  constructor(scene: GameScene, x: number, y: number, key: Move) {\n    super(scene, x, y, key);\n    scene.add.existing(this);\n\n    this.move = key;\n  }\n}\n\nclass Slot extends Phaser.GameObjects.Image {\n  private graphics: Phaser.GameObjects.Graphics;\n  \n\n  constructor(scene: GameScene, x: number, y: number) {\n    super(scene, x, y, 'slot');\n    scene.add.existing(this);\n\n    this.graphics = scene.add.graphics({ lineStyle: { width: 2, color: 0xff0000}, fillStyle: { color: 0xff00ff } });\n    \n    this.graphics.setVisible(false);\n  }\n\n  showMark(visible: boolean) {\n\n    this.graphics.clear();\n\n    let circle = new Phaser.Geom.Circle(this.x, this.y, this.displayWidth/2);\n    \n     this.graphics.strokeCircleShape(circle);\n\n     this.graphics.setVisible(visible);\n  }\n\n  show(visible: boolean) {\n    this.setVisible(visible);\n  }\n\n  destroyDot() {\n    this.graphics.clear();\n  }\n}\n\nconst k_delayBetweenMove = 650;\nconst k_memorizeTime = 100;\nconst k_inputDelay = 150;\n\n\nexport default class MoveManager {\n\n  //variable\n  private m_memorizeTime:number = 100;\n  private m_delayBetweenMove:number = 650;\n  private m_isValidating: boolean = false;\n\n  \n\n  private m_scene: GameScene;\n  private m_currentIndex: number = 0;\n  private m_currMoveCount: number = 4;\n  private m_moves: MoveObject[] = [];\n  private m_slots: Slot[] = [];\n\n  private m_correctSound: Phaser.Sound.BaseSound;\n  private m_wrongSound: Phaser.Sound.BaseSound;\n\n  private m_position:Phaser.Geom.Point;\n  private m_marginBottom:number = 0;\n\n  get isValidating(): boolean {\n    return this.m_isValidating;\n  }\n\n  get currMoveCount(): number {\n    return this.m_currMoveCount;\n  }\n\n  set currMoveCount(count: number) {\n\n    this.m_currMoveCount = count;\n  }\n\n  constructor(scene: GameScene, x:number, y:number) {\n    this.m_scene = scene;\n\n    this.m_correctSound = scene.sound.add('correct');\n    this.m_wrongSound = scene.sound.add('wrong');\n    this.m_position = new Phaser.Geom.Point(x, y);\n\n    this.m_marginBottom = 0.15 * scene.cameras.main.height;\n  }\n\n  //function for init variable from cms\n  public loadData()\n  {\n      this.m_memorizeTime = k_memorizeTime;\n      this.m_delayBetweenMove = k_delayBetweenMove;\n  }\n\n  public reset() {\n    this.m_currentIndex = 0;\n    this.createMoveSlots();\n  }\n\n  public createMoveSlots() {\n    this.clearSlots();\n\n    for (let i = 0; i < this.m_currMoveCount; i++) {\n      let width = this.m_scene.cameras.main.width;\n      let slot = new Slot(\n        this.m_scene,\n        (width / (this.m_currMoveCount + 1)) * (i + 1),\n        this.m_position.y - this.m_marginBottom,\n      );\n\n      let max = this.currMoveCount < 5 ? 5 : this.currMoveCount;\n\n      slot.setScale(((1.9 * 5) / max) * this.m_scene.cameras.main.width/720);\n      this.m_slots.push(slot);\n      slot.setVisible(false);\n    }\n  }\n\n  showMoveSlots(show: boolean) {\n    for (let i = 0; i < this.m_slots.length; i++) {\n      this.m_slots[i].show(show);\n\n      if (!show) {\n        this.m_slots[i].showMark(show);\n      }\n    }\n  }\n\n  generateMoves() {\n    this.clearMoves();\n\n    this.m_moves = [];\n\n    for (let i = 0; i < this.m_currMoveCount; i++) {\n      let rand = Math.round(Math.random());\n\n      let move: Move;\n      if (rand === 0) {\n        move = Move.kUp;\n      } else {\n        move = Move.kRight;\n      }\n\n      this.fillSlot(move, i);\n    }\n  }\n\n  displayMove(index: number) {\n    this.m_moves[index].setVisible(true);\n\n    let scale = this.m_moves[index].scale;\n\n    this.m_moves[index].setScale(scale / 1.5);\n\n    AnimationHelper.Instance.Resize(this.m_scene, this.m_moves[index], 0.1, scale);\n\n    this.m_correctSound.play();\n  }\n\n  validateMove(move: Move): boolean {\n    let isValid = false;\n    if (this.m_isValidating === true) {\n      return isValid;\n    }\n\n    if (move === this.m_moves[this.m_currentIndex].getMove()) {\n      this.displayMove(this.m_currentIndex);\n      this.addScore(move);\n      this.m_currentIndex++;\n      isValid = true;\n    } else {\n      let width = this.m_scene.cameras.main.width;\n      let x = this.m_scene.add.image(\n        (width / (this.m_currMoveCount + 1)) * (this.m_currentIndex + 1),\n        this.m_position.y- this.m_marginBottom,\n        'x',\n      );\n      this.m_slots[this.m_currentIndex].showMark(true);\n      this.m_scene.wrongMove();\n      this.m_currentIndex = 0;\n      this.m_wrongSound.play();\n\n      this.m_scene.time.addEvent({\n        delay: 200,\n        callback: () => {\n          this.hideMoves();\n          x.destroy();\n        },\n      });\n    }\n\n    this.m_isValidating = true;\n\n    this.m_scene.time.addEvent({\n      delay: k_inputDelay,\n      callback: () => {\n        this.m_isValidating = false;\n        if (this.m_currentIndex === this.m_currMoveCount) {\n          this.m_scene.roundComplete();\n          for (let i = 0; i < this.m_currMoveCount; i++) {\n            let scale = this.m_moves[i].scale;\n            AnimationHelper.Instance.Pulse(\n              this.m_scene,\n              this.m_moves[i],\n              0.4,\n              scale * 1.1,\n              3,\n            );\n            AnimationHelper.Instance.Swing(this.m_scene, this.m_moves[i], 0.4, 30, 3);\n          }\n\n          this.m_currentIndex = 0;\n        }\n      },\n    });\n\n    return isValid;\n  }\n\n  private fillSlot(move: Move, index: number) {\n    let width = this.m_scene.cameras.main.width;\n    let moveObject = new MoveObject(\n      this.m_scene,\n      (width / (this.m_currMoveCount + 1)) * (index + 1),\n      this.m_position.y - this.m_marginBottom,\n      move,\n    );\n    let max = this.currMoveCount < 5 ? 5 : this.currMoveCount;\n    moveObject.setScale(((0.7 * 5) / max)* this.m_scene.cameras.main.width/720);\n    moveObject.setVisible(false);\n\n    this.m_moves.push(moveObject);\n  }\n\n  displayMoves() {\n    for (let i = 0; i < this.m_moves.length; i++) {\n      this.m_scene.time.addEvent({\n        delay: this.m_delayBetweenMove * (i + 1),\n\n        callback: () => {\n          this.displayMove(i);\n          this.m_scene.processMove(this.m_moves[i].getMove());\n        },\n      });\n    }\n\n    this.m_scene.time.addEvent({\n      delay:\n        k_delayBetweenMove * this.m_currMoveCount + this.m_delayBetweenMove + this.m_memorizeTime,\n      callback: () => {\n        this.hideMoves();\n\n        this.m_scene.startInputPhase();\n      },\n    });\n  }\n\n  private hideMoves() {\n    for (let i = 0; i < this.m_moves.length; i++) {\n      this.m_moves[i].setVisible(false);\n    }\n  }\n\n  private clearMoves() {\n    for (let i = 0; i < this.m_moves.length; i++) {\n      this.m_moves[i].destroy();\n    }\n\n    this.m_moves = [];\n  }\n\n  private clearSlots() {\n    for (let i = 0; i < this.m_slots.length; i++) {\n      this.m_slots[i].destroyDot();\n      this.m_slots[i].destroy();\n    }\n\n    this.m_slots = [];\n  }\n\n  private addScore(move: Move) {\n    let width = this.m_scene.cameras.main.width;\n    new ScorePopUp(\n      this.m_scene,\n      (width / (this.m_currMoveCount + 1)) * (this.m_currentIndex + 1),\n      this.m_position.y - this.m_marginBottom - 50 * this.m_scene.cameras.main.width/720,\n      '+100',\n      move,\n      0.5,\n    );\n  }\n}\n","\nimport * as Phaser from \"phaser\";\n\n\nexport default class GameScore extends Phaser.GameObjects.Image\n{\n    private m_text : Phaser.GameObjects.Text;\n    private m_score:number = 0;\n    constructor(scene:Phaser.Scene, x:number, y:number)\n    {   \n        super(scene, x, y, \"scoreBg\");\n     \n     \n            this.scene.add.existing(this);\n            this.m_text = scene.add.text(x + 50 *scene.cameras.main.width/720 , y, \"0\", {fontSize: 40, color:\"white\", fontFamily: \"Exo\" });\n            this.m_text.setOrigin(0, 0.5);\n            this.setScale(scene.cameras.main.width/720);\n            this.m_text.setScale(scene.cameras.main.width/720);\n    }\n\n    reset()\n    {\n        this.m_score = 0;\n        this.m_text.setText(this.m_score.toString());\n    }\n\n    setScore(score:number)\n    {    \n        this.m_score = score;\n        this.m_text.setText(this.m_score.toString());\n    }\n\n  \n}","\nimport * as Phaser from \"phaser\";\n\n\nexport default class MusicButton extends Phaser.GameObjects.Image\n{\n    private m_text:Phaser.GameObjects.Text;\n    private m_isOn:boolean = true;\n\n    constructor(scene:Phaser.Scene, x:number, y:number)\n    {   \n        super(scene, x, y, \"music\", );\n     \n        scene.add.existing(this);\n\n        this.setOrigin(0.5, 0.5);\n  \n        this.setScale(scene.cameras.main.width/720);\n        this.m_text = scene.add.text(x - 75 * scene.cameras.main.width/720, y, \"ON\", {fontSize: 40, color:\"white\", fontFamily: \"Exo\" } ).setOrigin(0.5)\n        this.m_text.setScale(scene.cameras.main.width/720);\n\n\n        let rect = scene.add.rectangle(x -25, y, 175, 100, 0xffffff, 0.0);\n\n        rect.setInteractive();\n\n        rect.on(\"pointerdown\", () => this.setSound());\n    }\n\n    private setSound()\n    {\n        this.m_isOn = !this.m_isOn;\n\n        this.scene.sound.mute = !this.m_isOn;\n\n        if(this.m_isOn)\n        {\n            this.m_text.setText(\"ON\")\n        }\n        else\n        {\n            this.m_text.setText(\"OFF\")\n        }\n\n\n    }\n  \n}","import * as Phaser from 'phaser';\nimport GameScene from '../Scene/GameScene';\n\nexport default class Timer {\n  private m_duration: number;\n\n  private m_currentTime: number;\n  //@ts-ignore\n  private m_timer: Phaser.Time.TimerEvent | undefined;\n\n  private m_milliseconds: Phaser.GameObjects.Text;\n  private m_seconds: Phaser.GameObjects.Text;\n\n  private m_hasStarted: boolean = false;\n\n  private m_scene: GameScene;\n\n  constructor(scene: GameScene, x: number, y: number, duration: number = 20) {\n    this.m_duration = duration;\n    this.m_currentTime = duration;\n    this.m_scene = scene;\n    this.m_seconds = scene.add\n      .text(\n        x - 0.03 * scene.cameras.main.width,\n        y,\n        duration.toString().substr(0, 2),\n        { fontSize: 60, fontFamily: 'Exo' },\n      )\n      .setOrigin(0.5, 0)\n      .setScale(scene.cameras.main.width/720);\n    this.m_milliseconds = scene.add\n      .text(x + 0.06 * scene.cameras.main.width, y + 5 *scene.cameras.main.width/720, duration.toString(), {\n        fontSize: 30,\n        fontFamily: 'Exo',\n      })\n      .setOrigin(0.5, 0)\n      .setScale(scene.cameras.main.width/720);\n    this.setMilliseconds(duration + 0.001);\n  }\n\n  playTimer(scene: GameScene, callbackFunction: () => void) {\n    if (this.m_timer === undefined) {\n      this.m_timer = scene.time.delayedCall(\n        this.m_duration * 1000,\n        callbackFunction,\n        [],\n        scene,\n      );\n    }\n\n    this.m_hasStarted = true;\n  }\n\n  pause(pause: boolean) {\n    if (this.m_timer !== undefined) this.m_timer.paused = pause;\n  }\n\n  tick() {\n    if (this.m_hasStarted) {\n      if (this.m_timer !== undefined) {\n        let time =\n          this.m_duration - this.m_timer.getProgress() * this.m_duration;\n        this.setSeconds(time);\n        this.setMilliseconds(time);\n      }\n    }\n  }\n\n  reset() {\n    this.setSeconds(this.m_duration);\n    this.setMilliseconds(this.m_duration + 0.001);\n    this.m_hasStarted = false;\n\n    if (this.m_timer !== undefined) {\n      this.m_timer.destroy();\n      this.m_timer = undefined;\n    }\n  }\n\n  setSeconds(seconds: number) {\n    let text = seconds.toString();\n    if (seconds < 10) {\n      text = '0' + text;\n    }\n\n    if (seconds < 0) {\n      text = '00' + text;\n    }\n    this.m_seconds.setText(text.toString().substr(0, 2));\n  }\n\n  setMilliseconds(seconds: number) {\n    let text = seconds.toString();\n    if (seconds < 10) {\n      text = '0' + text;\n    }\n\n    if (seconds < 0) {\n      text = '00' + text;\n    }\n    text = text.toString().substr(3, 5);\n\n    if (seconds === 0) {\n      text = '00';\n    }\n\n    this.m_milliseconds.setText(text.toString().substr(0, 2));\n  }\n}\n","import * as Phaser from 'phaser';\nimport AnimationHelper from '../Helper/AnimationHelper';\n\nexport default class RoundSummary extends Phaser.GameObjects.Container {\n  private m_roundText: Phaser.GameObjects.Text;\n  private m_pointText: Phaser.GameObjects.Text;\n  private m_shadow: Phaser.GameObjects.Text;\n\n  constructor(\n    scene: Phaser.Scene,\n    x: number,\n    y: number,\n    round: number,\n    point: number,\n  ) {\n    \n    let children = [];\n\n    let graphics:Phaser.GameObjects.Graphics = scene.add.graphics();\n    \n    \n   \n    graphics.fillStyle(0x64799c, 1);\n    \n    graphics.fillRoundedRect(-640/2, -430/2, 640,430, 32)\n \n\n    graphics.fillStyle(0x76b6e3, 1);\n\n    let panelTitle =  graphics.fillRoundedRect(-240/2, -230 - 70/2, 240 , 70, 12);\n\n    children.push(graphics);\n\n\n    let shadow = new Phaser.GameObjects.Text(\n      scene,\n      0,\n      panelTitle.y + 25 - 230 + 3,\n      'ROUND ' + round.toString(),\n      { color: 'black', fontSize: '40px', fontFamily: 'Exo' },\n    ).setOrigin(0.5, 1);\n\n  \n      shadow.setStroke('black', 3);\n\n\n    let titleText = new Phaser.GameObjects.Text(\n      scene,\n      0,\n      panelTitle.y + 25 - 230,\n      'ROUND ' + round.toString(),\n      { color: 'white', fontSize: '40px', fontFamily: 'Exo' },\n    ).setOrigin(0.5, 1);\n\n  \n      titleText.setStroke('white', 3);\n\n\n   \n      children.push(shadow);\n\n    children.push(titleText);\n    \n\n    let youGet = new Phaser.GameObjects.Text(scene, 0, -120, 'YOU GET', {\n      color: 'white',\n      fontSize: '30px',\n      fontFamily: 'Exo',\n    }).setOrigin(0.5, 1);\n\n    children.push(youGet);\n\n    let coin = new Phaser.GameObjects.Image(scene, 0, -30, 'scoreBg');\n\n    coin.setScale(2);\n\n    children.push(coin);\n\n    let points = new Phaser.GameObjects.Text(scene, 0, 120, point.toString(), {\n      color: '#fcba03',\n      fontSize: '55px',\n      fontFamily: 'Exo',\n    }).setOrigin(0.5, 1);\n\n    points.setStroke('#fcba03', 4);\n    children.push(points);\n\n    let pointText = new Phaser.GameObjects.Text(scene, 0, 170, 'Points', {\n      color: '#fcba03',\n      fontSize: '30px',\n      fontFamily: 'Exo',\n    }).setOrigin(0.5, 1);\n\n\n\n    children.push(pointText);\n\n    super(scene, x, y + 25, children);\n\n    scene.add.existing(this);\n\n    this.m_pointText = points;\n    this.m_roundText = titleText;\n    this.m_shadow = shadow;\n    this.setDepth(1);\n  }\n\n  show(round: number, point: number, bonus: number = 0) {\n    this.m_pointText.setText((point + bonus).toString());\n\n    this.setScale(this.scale * 0.4 * this.scene.cameras.main.width / 720);\n    this.m_roundText.setText('ROUND ' + round.toString());\n    this.m_shadow.setText('ROUND ' + round.toString());\n    this.setVisible(true);\n    AnimationHelper.Instance.Resize(this.scene, this, 0.2, 1  * this.scene.cameras.main.width / 720);\n  }\n\n  hide() {\n    this.setVisible(false);\n  }\n}\n","import GameScene from \"../Scene/GameScene\";\n\nexport default class GameOver \n{\n   private gameOverContainer: Phaser.GameObjects.Container;\n\n    constructor(scene:GameScene)\n    {\n        let children =  [];\n\n        //const panel = scene.add.rectangle(0, 0, 600, 480, 0x2a81bf);\n      //  children.push(panel);\n        const replayButton = scene.add.image(0,50, 'replay');\n        scene.add.existing(replayButton);\n        replayButton.setInteractive();\n        children.push(replayButton);\n\n        const gameOverText = scene.add.text(0, -200, \"GAME OVER\", { fontSize: 60, fontFamily: \"Exo\" }).setOrigin(0.5);;\n        replayButton.setScale(0.7);\n\n      \n        replayButton.on('pointerover', () => { replayButton.setScale(0.9)});\n\n        replayButton.on('pointerdown', () => { replayButton.setScale(0.7);\n           scene.reset();\n           this.setVisible(false);\n        })\n\n        replayButton.on('pointerout', () => { replayButton.setScale(0.7)});\n        children.push(gameOverText);\n        \n        this.gameOverContainer = new Phaser.GameObjects.Container(scene, scene.cameras.main.width/2, scene.cameras.main.height/2 - 100, children);\n        scene.add.existing(this.gameOverContainer);\n\n\n\n        this.gameOverContainer.setDepth(2);\n\n        this.gameOverContainer.setScale(scene.cameras.main.width/720);\n    }\n\n    public setVisible(isVisible: boolean)\n    {\n        this.gameOverContainer.setVisible(isVisible);\n    }\n\n}","import * as Phaser from 'phaser';\n\nexport default class TextHelper{\n\n    private m_text:Phaser.GameObjects.Text | undefined = undefined;\n    private static m_instance: TextHelper;\n\n\n    public static get Instance() {\n        return this.m_instance || (this.m_instance = new this());\n      }\n      \n\n    showText(\n      scene: Phaser.Scene,\n      x: number,\n      y: number,\n      size: number,\n      text: string,\n      color : string,\n      duration: number,\n      hasShadow: boolean = true\n    ):Phaser.GameObjects.Text{\n\n     if(this.m_text !== undefined)\n     {\n        this.m_text.destroy();\n     }\n\n\n      this.m_text = scene.add.text(x, y, text, { color: color, fontSize: size.toString() +\"px\", fontFamily: 'Exo' });\n\n      this.m_text.setOrigin(0.5);\n      this.m_text.setScale(scene.cameras.main.width/720);\n\n      if(hasShadow)\n      {\n        this.m_text.setStroke('#ffffff', 4);\n        this.m_text.setShadowStroke(true);\n        this.m_text.setShadow(0, 5, \"#346eeb\");\n    \n      }\n   \n      scene.time.addEvent({\n        delay: duration * 1000,\n        callback: () => {\n          if(this.m_text !== undefined)\n            this.m_text.setVisible(false);\n        },\n      });\n\n      return this.m_text;\n    }\n  }\n  ","import * as Phaser from 'phaser';\nimport Dancer from '../Object/Dancer';\nimport Button from '../Object/Button';\nimport CountDown from '../Object/CountDown';\nimport MoveManager from '../Manager/MoveManager';\nimport GameScore from '../Object/GameScore';\nimport MusicButton from '../Object/MusicButton';\nimport { Move } from '../Move';\nimport Timer from '../Object/Timer';\nimport RoundSummary from '../Object/RoundSummary';\nimport GameOver from '../Object/GameOver';\nimport AnimationHelper from '../Helper/AnimationHelper';\nimport TextHelper from '../Helper/TextHelper';\n\n\nconst k_correctScore:number = 100;\nconst k_wrongPenalty:number = 100;\nconst k_firstTryBonus:number = 75;\nconst k_moveCounts:number[] = [4, 5,  6,7 , 8, 9 , 10];\n\nexport default class GameScene extends Phaser.Scene {\n  //variable\n  private m_score: number = 0;\n  private m_correctScore = 100;\n  private m_wrongPenalty = 100;\n  private m_firstTryBonus = 75;\n  private m_moveCounts:integer[] = [];\n  private m_isFirstTry:boolean = true;\n  private m_showInstruction:boolean = true;\n  //Manager\n  //@ts-ignore\n  private m_moveManager: MoveManager;\n\n  //Object\n  //@ts-ignore\n  private m_dancer: Dancer;\n\n  private m_currentRound: number = 1;\n  //@ts-ignore\n  private m_upButton: Button;\n  //@ts-ignore\n  private m_rightButton: Button;\n  //@ts-ignore\n  private m_countDown: CountDown;\n  //@ts-ignore\n  private m_scoreUI: GameScore;\n  //@ts-ignore\n  private m_roundSummary: RoundSummary;\n  //@ts-ignore\n  private m_timer: Timer;\n\n  //@ts-ignore\n  private m_tint: Phaser.GameObjects.Rectangle;\n  //@ts-ignore\n  private m_bgm: Phaser.Sound.BaseSound;\n  //@ts-ignore\n  private m_winSound: Phaser.Sound.BaseSound;\n  //@ts-ignore\n  private m_gameOverUI: GameOver;\n  //@ts-ignore\n  private m_musicButton: MusicButton;\n\n\n\n\n  get Score()\n  {\n    return this.m_score;\n  }\n\n  set Score(score:number)\n  {\n    this.m_score = score;\n\n    if(this.m_score < 0)\n    {\n      this.m_score = 0;\n    }\n  }\n  \n  constructor() {\n    super({ key: 'GameScene' });\n  }\n\n  preload(): void {}\n\n  create(): void {\n    let bg = this.add.image(\n      this.cameras.main.width / 2,\n      this.cameras.main.height / 2,\n      'background',\n    );\n    bg.displayWidth = this.cameras.main.width;\n    bg.displayHeight = this.cameras.main.height;\n\n    // this.fpsText = new FpsText(this);\n\n    this.m_dancer = new Dancer(\n      this,\n      this.cameras.main.width / 2,\n      this.cameras.main.height / 2  - this.cameras.main.height * 0.1,\n    );\n    \n    this.m_upButton = new Button(\n      this,\n      this.cameras.main.width / 2 - this.cameras.main.width * 0.2,\n      this.cameras.main.height,\n      Move.kUp,\n    );\n    this.m_rightButton = new Button(\n      this,\n      this.cameras.main.width / 2 + this.cameras.main.width * 0.2,\n      this.cameras.main.height,\n      Move.kRight,\n    );\n\n    this.m_moveManager = new MoveManager(this, this.cameras.main.width/2, this.m_rightButton.y - this.cameras.main.height * 0.05);\n\n\n    this.m_countDown = new CountDown(this, this.cameras.main.width / 2,  this.cameras.main.height/ 2 + 120 * this.cameras.main.width/720);\n\n    this.m_scoreUI = new GameScore(this, 75, 75);\n\n    this.m_musicButton = new MusicButton(this, this.cameras.main.width - 75, 75);\n\n    this.m_roundSummary = new RoundSummary(\n      this,\n      this.cameras.main.width / 2,\n      this.cameras.main.height / 2 -  50 * this.cameras.main.width/720,\n      this.m_currentRound,\n      this.m_score,\n    );\n    this.m_roundSummary.hide();\n \n    this.m_timer = new Timer(this, this.cameras.main.width/2, 0 + this.cameras.main.height * 0.16, 20);\n\n    this.m_tint = this.add.rectangle(\n      0,\n      0,\n      this.cameras.main.width,\n      this.cameras.main.height,\n      0x00000,\n      0.45,\n    );\n\n    this.m_tint.setOrigin(0, 0);\n\n    this.m_tint.setVisible(false);\n\n    let config = {\n      mute: false,\n      volume: 1,\n      rate: 1,\n      detune: 0,\n      seek: 0,\n      loop: true,\n      delay: 0,\n    };\n\n    this.m_bgm = this.sound.add('disco', config);\n    this.m_winSound = this.sound.add('yay');\n\n    this.m_bgm.play();\n\n    this.m_gameOverUI = new GameOver(this);\n\n    this.m_gameOverUI.setVisible(false);\n\n    this.loadData();\n\n    this.initGame();\n  }\n\n  private loadData():void\n  {\n    this.m_correctScore = k_correctScore;\n    this.m_wrongPenalty = k_wrongPenalty;\n    this.m_firstTryBonus = k_firstTryBonus;\n    this.m_moveCounts = k_moveCounts;\n\n    this.m_moveManager.loadData();\n  }\n\n  \n  initGame():void\n  {\n    this.setMoveCount();\n    let text = TextHelper.Instance.showText(this, this.cameras.main.width / 2, this.m_dancer.y, 60, \"ROUND \" + this.m_currentRound.toString(), \"white\", 1.0);\n    \n    this.m_tint.setVisible(true);\n    AnimationHelper.Instance.EaseInAndFade(this, text, 1);\n\n  \n    this.time.addEvent({\n        delay: 1000,\n        callback: () =>\n        {this.startCountDownPhase()\n        this.m_tint.setVisible(false);}\n    })\n  }\n\n  private setMoveCount():void\n  {\n    if(this.m_currentRound < this.m_moveCounts.length)\n    this.m_moveManager.currMoveCount = this.m_moveCounts[this.m_currentRound -1];\n    this.m_moveManager.createMoveSlots();\n  }\n  update(): void {\n    // this.fpsText.update();\n    this.m_timer.tick();\n  }\n\n  reset = () => {\n    this.m_tint.setVisible(false);\n    this.m_currentRound = 1;\n    this.m_score = 0;\n    this.m_scoreUI.reset();\n    this.processMove(Move.kIdle);\n    this.m_timer.reset();\n    this.setMoveCount();\n    this.m_moveManager.reset();\n    this.startCountDownPhase();\n  };\n\n  roundComplete() {\n    this.enableButton(false);\n\n    this.m_timer.pause(true);\n    this.time.addEvent({\n      delay: 250,\n      callback: () => {\n        this.processMove(Move.kWin);\n        let text = TextHelper.Instance.showText(\n          this,\n          this.cameras.main.width / 2,\n          this.cameras.main.height/ 2 + 80,\n          64,\n          'AWESOME!',\n          \"white\",\n          1.5,\n        );\n        AnimationHelper.Instance.Pulse(this, text, 0.4, text.scale * 1.3, 3);\n\n        this.m_winSound.play();\n      },\n    });\n\n    let score = this.m_moveManager.currMoveCount * this.m_correctScore;\n    let bonus = 0;\n    if(this.m_isFirstTry) bonus = this.m_firstTryBonus;\n\n    this.Score += (score + bonus);\n\n    this.time.addEvent({\n      delay: 1500,\n      callback: () => {\n        this.m_scoreUI.setScore(this.Score);\n        this.m_roundSummary.show(\n          this.m_currentRound,\n          score, bonus\n        );\n        this.m_tint.setVisible(true);\n      },\n    });\n\n    this.time.addEvent({\n      delay: 3500,\n      callback: () => {\n        this.m_currentRound++;\n        this.m_moveManager.showMoveSlots(false);\n        this.m_roundSummary.hide();\n        this.m_tint.setVisible(false);\n        this.m_timer.reset();\n        this.setMoveCount();\n        this.m_moveManager.generateMoves();\n        this.startMemorizePhase();\n      },\n    });\n  }\n\n  //This get called when player input wrong move\n  wrongMove() {\n    this.enableButton(false);\n\n    this.m_isFirstTry = false;\n\n    this.Score -= this.m_wrongPenalty;\n\n    this.m_scoreUI.setScore(this.Score);\n\n    this.time.addEvent({\n      delay: 200,\n      callback: () => {\n        TextHelper.Instance.showText(\n          this,\n          this.cameras.main.width / 2,\n          this.cameras.main.height/ 2 + 80,\n          60,\n          'TRY AGAIN',\n          \"white\",\n          1,\n        );\n      },\n    });\n\n    this.time.addEvent({\n      delay: 1000,\n      callback: () => {\n        this.startInputPhase();\n      },\n    });\n  }\n\n  //This method start the countdown phase\n  startCountDownPhase() {\n    this.enableButton(false);\n    this.m_moveManager.showMoveSlots(false);\n    this.m_moveManager.generateMoves();\n    this.m_roundSummary.hide();\n    this.time.addEvent({\n      delay: 500,\n      callback: () => {\n        this.m_countDown.startCountDown(this.startMemorizePhase);\n      },\n    });\n  }\n\n  //This method start the memorizing phase\n  startMemorizePhase = (): void => {\n    if(this.m_showInstruction)\n    {\n      TextHelper.Instance.showText(this, this.cameras.main.width / 2, this.cameras.main.height/2 + this.cameras.main.height * 0.08, 24, \"Follow the pattern to get points\", \"white\", 3, false);\n    }\n\n    this.m_showInstruction = false;\n    this.m_isFirstTry = true;\n    this.m_moveManager.showMoveSlots(true);\n    this.m_moveManager.displayMoves();\n  };\n\n  //This method start the input phase\n  startInputPhase() {\n    this.enableButton(true);\n\n    this.m_timer.playTimer(this, this.gameOver);\n  }\n\n  private enableButton(enable: boolean) {\n    if (enable) {\n      this.m_rightButton.setInteractive();\n      this.m_rightButton.setAlpha(1);\n      this.m_upButton.setInteractive();\n      this.m_upButton.setAlpha(1);\n    } else {\n      this.m_rightButton.disableInteractive();\n      this.m_rightButton.setAlpha(0.5);\n      this.m_upButton.disableInteractive();\n      this.m_upButton.setAlpha(0.5);\n    }\n  }\n\n  validateMove(move: Move): void {\n    if (this.m_moveManager.validateMove(move)) {\n    }\n  }\n\n  processMove(move: Move): void {\n    if (!this.m_moveManager.isValidating) {\n      this.m_dancer.dance(move);\n    }\n  }\n\n  gameOver(): void {\n    this.m_dancer.lose();\n    this.enableButton(false);\n\n    let text = TextHelper.Instance.showText(this, this.cameras.main.width / 2, this.m_dancer.y, 60, \"TIME'S UP\", \"white\", 1.5);\n   AnimationHelper.Instance.EaseInAndFade(this, text, 1.5);\n    this.m_tint.setVisible(true);\n\n    this.time.addEvent({\n      delay: 1000,\n      callback: () => {\n        this.m_gameOverUI.setVisible(true);\n      },\n    });\n  }\n}\n","import * as Phaser from 'phaser';\nimport { IUseProgress } from '../../../PhaserLoader/interfaces';\n\nexport default class PreloadScene extends Phaser.Scene {\n  private useProgress: IUseProgress | undefined;\n  constructor() {\n    super({ key: 'PreloadScene' });\n  }\n\n  init(data: { useProgress: IUseProgress }): void {\n    this.useProgress = data.useProgress;\n  }\n\n  \n  preload(): void {\n    this.load.path = `${process.env.PUBLIC_URL}/Assets/`;\n    this.load.image('shopee', 'shopee.png');\n    this.load.spritesheet('dancer-idle', 'choki-standby.png', {\n      frameWidth: 450,\n      frameHeight: 450,\n    });\n    this.load.spritesheet('dancer-up', 'choki-up.png', {\n      frameWidth: 450,\n      frameHeight: 450,\n    });\n    this.load.spritesheet('dancer-right', 'choki-right.png', {\n      frameWidth: 450,\n      frameHeight: 450,\n    });\n\n    this.load.spritesheet('dancer-win', 'choki-win.png', {\n      frameWidth: 450,\n      frameHeight: 450,\n    });\n\n    this.load.spritesheet('dancer-lose', 'choki-lose.png', {\n      frameWidth: 450,\n      frameHeight: 450,\n    });\n\n    this.load.image('right', 'RightButton.png');\n\n    this.load.image('music', 'Music.png');\n\n    this.load.image('x', 'x.png');\n\n    this.load.image('replay', 'Replay.png');\n\n    this.load.image('up', 'UpButton.png');\n\n    this.load.image('slot', 'EmptyButton.png');\n\n    this.load.image('background', 'MainBackground.png');\n\n    this.load.image('scoreBg', 'Points.png');\n\n    this.load.audio('whistle', 'whistle.wav');\n\n    this.load.audio('correct', 'correct.wav');\n\n    this.load.audio('wrong', 'wrong.wav');\n\n    this.load.audio('disco', 'disco.mp3');\n\n    this.load.audio('yay', 'yay.wav');\n    this.load.on('progress', this.updateBar, { useProgress: this.useProgress });\n    this.load.on('complete', this.complete, { scene: this.scene });\n  }\n\n  create():void\n  {\n    this.add.text(0, 0, \"hack\", {font:\"Exo\", fill:\"#FFFFFF\"});\n  }\n\n  updateBar(percentage: number) {\n    if (this.useProgress) {\n      const newPercentage = (100 - this.useProgress.limit) * percentage;\n      this.useProgress.setProgress(\n        this.useProgress.limit + Math.floor(newPercentage),\n      );\n    }\n  }\n\n  complete() {\n    this.scene.start('GameScene');\n  }\n}\n","import 'phaser';\nimport GameScene from './Scene/GameScene';\nimport PreloadScene from './Scene/PreloadScene';\nimport { IUseProgress } from '../../PhaserLoader/interfaces';\n\ntype GameConfig = Phaser.Types.Core.GameConfig;\n\n\nconst defaultConfig: GameConfig = {\n  title: 'PhaserGame',\n  scale: {\n    parent: 'game',\n    mode: Phaser.Scale.FIT,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    width:  window.devicePixelRatio * window.innerWidth,\n    height: window.devicePixelRatio * window.innerHeight - 130,\n    \n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      debug: true,\n    },\n  },\n  backgroundColor: '#493a52',\n};\n\nexport class PhaserGame extends Phaser.Game {\n  constructor(useProgress: IUseProgress, config: GameConfig = defaultConfig) {\n    super(config);\n    this.scene.add('PreloadScene', PreloadScene, true, { useProgress });\n    this.scene.add('GameScene', GameScene);\n  }\n}\n","import React from 'react';\nimport { PhaserGame } from './Scripts/app';\nimport { IUseProgress } from '../PhaserLoader/interfaces';\n\ninterface IPhaserProps {\n  useProgress: IUseProgress;\n}\n\nexport default class Phaser extends React.PureComponent<IPhaserProps> {\n  componentDidMount() {\n    const { isReadyToLoad, hasFontLoaded } = this.props.useProgress;\n    if (isReadyToLoad && hasFontLoaded) {\n      new PhaserGame(this.props.useProgress);\n    }\n  }\n  componentDidUpdate(prevProps: IPhaserProps) {\n    const { isReadyToLoad, hasFontLoaded } = this.props.useProgress;\n    if (\n      prevProps.useProgress.isReadyToLoad !== isReadyToLoad &&\n      hasFontLoaded\n    ) {\n      new PhaserGame(this.props.useProgress);\n    }\n  }\n  render() {\n    return <div id=\"game\"></div>;\n  }\n}\n"],"sourceRoot":""}